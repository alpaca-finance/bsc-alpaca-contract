{
  "name": "@alpaca-finance/alpaca-contract",
  "version": "1.2.27",
  "scripts": {
    "prepublish": "yarn build",
    "build": "yarn run build:cjs",
    "build:cjs": "tsc -p tsconfig.cjs.json",
    "compile5": "hardhat typechain --config hardhat.config.5.ts",
    "compile6": "hardhat typechain --config hardhat.config.ts",
    "compile6.12": "hardhat typechain --config hardhat.config.6.12.ts",
    "compile8.10": "hardhat typechain --config hardhat.config.8.10.ts",
    "compile8.11": "hardhat typechain --config hardhat.config.8.11.ts",
    "compilevy2.11": "hardhat typechain --config hardhat.config.vyper.2.11.ts --show-stack-traces",
    "compile": "yarn run compile5 && yarn run compile6 && yarn run compile6.12 && yarn run compile8.10 && yarn run compile8.11",
    "deploy:mainnet:001": "hardhat --network mainnet deploy --no-compile --reset --tags TimeLock",
    "deploy:mainnet:002": "hardhat --network mainnet deploy --no-compile --reset --tags FairLaunch",
    "deploy:mainnet:003": "hardhat --network mainnet deploy --no-compile --reset --tags ShareStrategies",
    "deploy:mainnet:triple-slope-model:deploy:triple-slope-model": "hardhat --network mainnet deploy --no-compile --reset --tags TripleSlopeModel",
    "deploy:mainnet:005": "hardhat --network mainnet deploy --no-compile --reset --tags WNativeRelayer",
    "deploy:mainnet:006": "hardhat --network mainnet deploy --no-compile --reset --tags SimpleOracle",
    "deploy:mainnet:007": "hardhat --network mainnet deploy --no-compile --reset --tags WorkerConfig",
    "deploy:mainnet:vault-config:deploy:vault-config": "hardhat --network mainnet deploy --no-compile --reset --tags ConfigurableInterestVaultConfig",
    "deploy:mainnet:vault:deploy:vault": "hardhat --network mainnet deploy --no-compile --reset --tags Vault",
    "deploy:mainnet:010": "hardhat --network mainnet deploy --no-compile --reset --tags PancakeswapWorker",
    "deploy:mainnet:011": "hardhat --network mainnet deploy --no-compile --reset --tags VaultStrategies",
    "deploy:mainnet:012": "hardhat --network mainnet deploy --no-compile --reset --tags StronkAlpaca",
    "deploy:mainnet:013": "hardhat --network mainnet deploy --no-compile --reset --tags Shield",
    "deploy:mainnet:014": "hardhat --network mainnet deploy --no-compile --reset --tags DebtTokenV2",
    "deploy:mainnet:015": "hardhat --network mainnet deploy --no-compile --reset --tags StrategyWithdrawMinimizeTrading",
    "deploy:mainnet:016": "hardhat --network mainnet deploy --no-compile --reset --tags PancakeswapWorkers",
    "deploy:mainnet:merkle-distribution:deploy:merkle-distribution": "hardhat --network mainnet deploy --no-compile --reset --tags MerkleDistributor",
    "deploy:mainnet:018": "hardhat --network mainnet deploy --no-compile --reset --tags --verbose VaultStrategiesV2",
    "deploy:mainnet:019": "hardhat --network mainnet deploy --no-compile --reset --tags ShareStrategiesV2",
    "deploy:mainnet:020": "hardhat --network mainnet deploy --no-compile --reset --tags TwoSideOptimalMigrateV2",
    "deploy:mainnet:021": "hardhat --network mainnet deploy --no-compile --reset --tags GrazingRange",
    "deploy:mainnet:strategies:deploy:pancakeswap-v2:share-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags ShareRestrictedStrategiesV2",
    "deploy:mainnet:strategies:deploy:pancakeswap-v2:vault-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags RestrictedVaultStrategiesV2",
    "deploy:mainnet:strategies:deploy:pcs-single-asset:share-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags ShareSingleAssetStrategiesV2",
    "deploy:mainnet:strategies:deploy:pcs-single-asset:vault-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags RestrictedSingleAssetVaultStrategiesV2",
    "deploy:mainnet:026": "hardhat --network mainnet deploy --no-compile --reset --tags SingleAssetWorkerConfig",
    "deploy:mainnet:027": "hardhat --network mainnet deploy --no-compile --reset --tags CakeMaxiWorkers",
    "deploy:mainnet:028": "hardhat --network mainnet deploy --no-compile --reset --tags WaultSwapWorkers",
    "deploy:mainnet:strategies:deploy:wswap:share-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags WaultSwapShareRestrictedStrategies",
    "deploy:mainnet:030": "hardhat --network mainnet deploy --no-compile --reset --tags WaultSwapRestrictedVaultStrategies",
    "deploy:mainnet:031": "hardhat --network mainnet deploy --no-compile --reset --tags OracleMedianizer",
    "deploy:mainnet:032": "hardhat --network mainnet deploy --no-compile --reset --tags ChainLinkPriceOracle",
    "deploy:mainnet:workers:deploy:pancakeswap-v2-workers02": "hardhat --network mainnet deploy --no-compile --reset --tags PancakeswapWorkers02",
    "deploy:mainnet:workers:deploy:wswap": "hardhat --network mainnet deploy --no-compile --reset --tags WaultSwapWorkers02",
    "deploy:mainnet:workers:deploy:mdex-workers02": "hardhat --network mainnet deploy --no-compile --reset --tags MdexWorkers02",
    "deploy:mainnet:workers:deploy:cakemaxi-workers02": "hardhat --network mainnet deploy --no-compile --reset --tags CakeMaxiWorkers02",
    "deploy:mainnet:s001": "hardhat --network mainnet deploy --no-compile --reset --tags AddWorkerStrategy",
    "deploy:mainnet:s002": "hardhat --network mainnet deploy --no-compile --reset --tags SeedWBNBVault",
    "deploy:mainnet:s003": "hardhat --network mainnet deploy --no-compile --reset --tags SetParamsVaultConfig",
    "deploy:mainnet:ownable:config:transfer-ownership": "hardhat --network mainnet deploy --no-compile --reset --tags TransferOwnershipToTimeLock",
    "deploy:mainnet:s005": "hardhat --network mainnet deploy --no-compile --reset --tags AddFairLaunchPool",
    "deploy:mainnet:s006": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeFairLaunch",
    "deploy:mainnet:vault:upgrade:vault": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeVault",
    "deploy:mainnet:vault:upgrade:debt-token": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeDebtToken",
    "deploy:mainnet:s008": "hardhat --network mainnet deploy --no-compile --reset --tags AddWorkerStrategy",
    "deploy:mainnet:s009": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockChangeAdminProxy",
    "deploy:mainnet:vault-config:config:set-params": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockSetParamsVaultConfig",
    "deploy:mainnet:vault-config:config:set-whitelisted-liquidators": "hardhat --network mainnet deploy --no-compile --reset --tags SetWhitelistedLiquidators",
    "deploy:mainnet:vault-config:config:set-whitelisted-callers": "hardhat --network mainnet deploy --no-compile --reset --tags SetWhitelistedCallers",
    "deploy:mainnet:vault-config:config:set-approved-add-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags SetApprovedAddStrategies",
    "deploy:mainnet:worker-config:config:set-configs": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockUpdateWorkerWorkerConfigParams",
    "deploy:mainnet:workers:config:set-strategy-ok": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockUpdateAddStratWorkers",
    "deploy:mainnet:timelock:deploy:timelock": "hardhat --network mainnet deploy --no-compile --reset --tags Timelock",
    "deploy:mainnet:timelock:get-execution-txs": "hardhat --network mainnet deploy --no-compile --reset --tags GetExecutionTxs",
    "deploy:mainnet:timelock:execute": "hardhat --network mainnet deploy --no-compile --reset --tags TimeLockExecution",
    "deploy:mainnet:s014": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeWorkers",
    "deploy:mainnet:s015": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockWorkersMigrateLP",
    "deploy:mainnet:s016": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockWorkersResetApproval",
    "deploy:mainnet:grazing-ranges:config:add-campaign-info": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockAddGrazingRangeCampaigns",
    "deploy:mainnet:grazing-ranges:config:add-reward-info": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockAddGrazingRangeRewardInfos",
    "deploy:mainnet:s019": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockUpgradeGrazingRange",
    "deploy:mainnet:s020": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockSetSharedStratsWhitelistedWorkers",
    "deploy:mainnet:worker-config:upgrade:worker-config": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeWorkerConfig",
    "deploy:mainnet:worker-config:upgrade:single-asset-worker-config": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeSingleAssetWorkerConfig",
    "deploy:mainnet:vault-config:upgrade:vault-config": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeVaultConfig",
    "deploy:mainnet:s023": "hardhat --network mainnet deploy --no-compile --reset --tags SetMaxKillBps",
    "deploy:mainnet:oracles:config:add-price-source-chainlink": "hardhat --network mainnet deploy --no-compile --reset --tags AddSourceChainLinkPriceOracle",
    "deploy:mainnet:oracles:config:add-primary-source-oracle-medianizer": "hardhat --network mainnet deploy --no-compile --reset --tags AddSourceOracleMedianizer",
    "deploy:mainnet:workers:upgrade:workers02": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeWorkers02",
    "deploy:mainnet:workers:config:set-treasury-config": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockAddTreasuryFieldsWorkers02",
    "deploy:mainnet:workers:config:set-beneficial-vault-config": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockAddBeneficialBuybackFieldsWorkers02",
    "deploy:mainnet:workers:config:set-reinvest-config": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockSetReinvestConfigWorkers02",
    "deploy:mainnet:workers:config:set-max-reinvest-bounty-bps": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockSetMaxReinvestBountyBpsWorkers02",
    "deploy:mainnet:strategies:upgrade:share-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags UpgradeShareStrategies",
    "deploy:mainnet:fairlaunch:config:add-pool": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockAddPool",
    "deploy:mainnet:fairlaunch:config:set-pool": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockSetPool",
    "deploy:mainnet:fairlaunch:config:set-alpaca-per-block": "hardhat --network mainnet deploy --no-compile --reset --tags TimelockSetAlpacaPerBlock",
    "deploy:mainnet:strategies:deploy:mdex:share-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags MdexShareRestrictedStrategies",
    "deploy:mainnet:strategies:deploy:mdex:vault-strategies": "hardhat --network mainnet deploy --no-compile --reset --tags MdexVaultRestrictedStrategies",
    "deploy:mainnet:delta-neutral-oracle:deploy:delta-neutral-oracle": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralOracle",
    "deploy:mainnet:delta-neutral-vault-config:deploy:delta-neutral-vault-config": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralVaultConfig",
    "deploy:mainnet:delta-neutral-vault:deploy:delta-neutral-vault": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralVault",
    "deploy:mainnet:delta-neutral-vault:config:init-positions": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralVaultInitPositions",
    "deploy:mainnet:delta-neutral-worker:deploy:delta-neutral-pcs-worker": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralPCSWorker02",
    "deploy:mainnet:delta-neutral-worker:deploy:delta-neutral-mdex-worker": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralMdexWorker02",
    "deploy:mainnet:delta-neutral-worker:config:set-whitelist-callers": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralWorkerSetWhitelistCallers",
    "deploy:mainnet:delta-neutral-vault-gateway:deploy:delta-neutral-vault-gateway": "hardhat --network mainnet deploy --no-compile --reset --tags DeltaNeutralVaultGateway",
    "deploy:mainnet:proxy-token:deploy:proxy-token": "hardhat --network mainnet deploy --no-compile --reset --tags ProxyToken",
    "deploy:mainnet:emission-forwarder:deploy:emission-forwarder": "hardhat --network mainnet deploy --no-compile --reset --tags EmissionForwarder",
    "deploy:testnet:000": "hardhat --network testnet deploy --no-compile --reset --tags Testnet",
    "deploy:testnet:000:panV2": "hardhat --network testnet deploy --no-compile --reset --tags PancakeswapV2",
    "deploy:testnet:000:waultswap": "hardhat --network testnet deploy --no-compile --reset --tags WaultSwap",
    "deploy:testnet:000:waultswapaddpool": "hardhat --network testnet deploy --no-compile --reset --tags WaultSwapAddPool",
    "deploy:testnet:000:waultswapaddliquidity": "hardhat --network testnet deploy --no-compile --reset --tags WaultSwapAddLiquidity",
    "deploy:testnet:001": "hardhat --network testnet deploy --no-compile --reset --tags TimeLock",
    "deploy:testnet:002": "hardhat --network testnet deploy --no-compile --reset --tags FairLaunch",
    "deploy:testnet:003": "hardhat --network testnet deploy --no-compile --reset --tags ShareStrategies",
    "deploy:testnet:004": "hardhat --network testnet deploy --no-compile --reset --tags TripleSlopeModel",
    "deploy:testnet:005": "hardhat --network testnet deploy --no-compile --reset --tags WNativeRelayer",
    "deploy:testnet:006": "hardhat --network testnet deploy --no-compile --reset --tags SimpleOracle",
    "deploy:testnet:007": "hardhat --network testnet deploy --no-compile --reset --tags WorkerConfig",
    "deploy:testnet:vault-config:deploy:vault-config": "hardhat --network testnet deploy --no-compile --reset --tags ConfigurableInterestVaultConfig",
    "deploy:testnet:vault:deploy:vault": "hardhat --network testnet deploy --no-compile --reset --tags Vault",
    "deploy:testnet:010": "hardhat --network testnet deploy --no-compile --reset --tags PancakeswapWorker",
    "deploy:testnet:011": "hardhat --network testnet deploy --no-compile --reset --tags VaultStrategies",
    "deploy:testnet:012": "hardhat --network testnet deploy --no-compile --reset --tags StronkAlpaca",
    "deploy:testnet:013": "hardhat --network testnet deploy --no-compile --reset --tags Shield",
    "deploy:testnet:014": "hardhat --network testnet deploy --no-compile --reset --tags DebtTokenV2",
    "deploy:testnet:015": "hardhat --network testnet deploy --no-compile --reset --tags StrategyWithdrawMinimizeTrading",
    "deploy:testnet:016": "hardhat --network testnet deploy --no-compile --reset --tags PancakeswapWorkers",
    "deploy:testnet:merkle-distribution:deploy:merkle-distribution": "hardhat --network testnet deploy --no-compile --reset --tags MerkleDistributor",
    "deploy:testnet:018": "hardhat --network testnet deploy --no-compile --reset --tags VaultStrategiesV2",
    "deploy:testnet:019": "hardhat --network testnet deploy --no-compile --reset --tags ShareStrategiesV2",
    "deploy:testnet:020": "hardhat --network testnet deploy --no-compile --reset --tags TwoSideOptimalMigrateV2",
    "deploy:testnet:021": "hardhat --network testnet deploy --no-compile --reset --tags GrazingRange",
    "deploy:testnet:strategies:deploy:pancakeswap-v2:share-strategies": "hardhat --network testnet deploy --no-compile --reset --tags ShareRestrictedStrategiesV2",
    "deploy:testnet:strategies:deploy:pancakeswap-v2:vault-strategies": "hardhat --network testnet deploy --no-compile --reset --tags RestrictedVaultStrategiesV2",
    "deploy:testnet:strategies:deploy:pcs-single-asset:share-strategies": "hardhat --network testnet deploy --no-compile --reset --tags ShareSingleAssetStrategiesV2",
    "deploy:testnet:strategies:deploy:pcs-single-asset:vault-strategies": "hardhat --network testnet deploy --no-compile --reset --tags RestrictedSingleAssetVaultStrategiesV2",
    "deploy:testnet:026": "hardhat --network testnet deploy --no-compile --reset --tags SingleAssetWorkerConfig",
    "deploy:testnet:027": "hardhat --network testnet deploy --no-compile --reset --tags CakeMaxiWorkers",
    "deploy:testnet:028": "hardhat --network testnet deploy --no-compile --reset --tags WaultSwapWorkers",
    "deploy:testnet:strategies:deploy:wswap:share-strategies": "hardhat --network testnet deploy --no-compile --reset --tags WaultSwapShareRestrictedStrategies",
    "deploy:testnet:030": "hardhat --network testnet deploy --no-compile --reset --tags WaultSwapRestrictedVaultStrategies",
    "deploy:testnet:031": "hardhat --network testnet deploy --no-compile --reset --tags OracleMedianizer",
    "deploy:testnet:032": "hardhat --network testnet deploy --no-compile --reset --tags ChainLinkPriceOracle",
    "deploy:testnet:workers:deploy:pancakeswap-v2-workers02": "hardhat --network testnet deploy --no-compile --reset --tags PancakeswapWorkers02",
    "deploy:testnet:workers:deploy:wswap": "hardhat --network testnet deploy --no-compile --reset --tags WaultSwapWorkers02",
    "deploy:testnet:workers:deploy:mdex-workers02": "hardhat --network testnet deploy --no-compile --reset --tags MdexWorkers02",
    "deploy:testnet:workers:deploy:cakemaxi-workers02": "hardhat --network testnet deploy --no-compile --reset --tags CakeMaxiWorkers02",
    "deploy:testnet:s001": "hardhat --network testnet deploy --no-compile --reset --tags TimelockAddWorkerStrategy",
    "deploy:testnet:s002": "hardhat --network testnet deploy --no-compile --reset --tags SeedWBNBVault",
    "deploy:testnet:s003": "hardhat --network testnet deploy --no-compile --reset --tags SetParamsVaultConfig",
    "deploy:testnet:ownable:config:transfer-ownership": "hardhat --network testnet deploy --no-compile --reset --tags TransferOwnershipToTimeLock",
    "deploy:testnet:s005": "hardhat --network testnet deploy --no-compile --reset --tags AddFairLaunchPool",
    "deploy:testnet:s006": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeFairLaunch",
    "deploy:testnet:vault:upgrade:vault": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeVault",
    "deploy:testnet:s008": "hardhat --network testnet deploy --no-compile --reset --tags AddWorkerStrategy",
    "deploy:testnet:s009": "hardhat --network testnet deploy --no-compile --reset --tags TimelockChangeAdminProxy",
    "deploy:testnet:vault-config:config:set-params": "hardhat --network testnet deploy --no-compile --reset --tags TimelockSetParamsVaultConfig",
    "deploy:testnet:vault-config:config:set-whitelisted-liquidators": "hardhat --network testnet deploy --no-compile --reset --tags SetWhitelistedLiquidators",
    "deploy:testnet:vault-config:config:set-whitelisted-callers": "hardhat --network testnet deploy --no-compile --reset --tags SetWhitelistedCallers",
    "deploy:testnet:vault-config:config:set-approved-add-strategies": "hardhat --network testnet deploy --no-compile --reset --tags SetApprovedAddStrategies",
    "deploy:testnet:worker-config:config:set-configs": "hardhat --network testnet deploy --no-compile --reset --tags TimelockUpdateWorkerWorkerConfigParams",
    "deploy:testnet:workers:config:set-strategy-ok": "hardhat --network testnet deploy --no-compile --reset --tags TimelockUpdateAddStratWorkers",
    "deploy:testnet:workers:config:set-max-reinvest-bounty-bps": "hardhat --network testnet deploy --no-compile --reset --tags TimelockSetMaxReinvestBountyBpsWorkers02",
    "deploy:testnet:timelock:get-execution-txs": "hardhat --network testnet deploy --no-compile --reset --tags GetExecutionTxs",
    "deploy:testnet:timelock:execute": "hardhat --network testnet deploy --no-compile --reset --tags TimeLockExecution",
    "deploy:testnet:dex:deploy:token-liq-pool": "hardhat --network testnet deploy --no-compile --reset --tags TestnetDeployTokens",
    "deploy:testnet:strategies:upgrade:share-strategies": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeShareStrategies",
    "deploy:testnet:s014": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeWorkers",
    "deploy:testnet:s015": "hardhat --network testnet deploy --no-compile --reset --tags TimelockWorkersMigrateLP",
    "deploy:testnet:s016": "hardhat --network testnet deploy --no-compile --reset --tags TimelockWorkersResetApproval",
    "deploy:testnet:grazing-ranges:config:add-campaign-info": "hardhat --network testnet deploy --no-compile --reset --tags TimelockAddGrazingRangeCampaigns",
    "deploy:testnet:grazing-ranges:config:add-reward-info": "hardhat --network testnet deploy --no-compile --reset --tags TimelockAddGrazingRangeRewardInfos",
    "deploy:testnet:s019": "hardhat --network testnet deploy --no-compile --reset --tags TimelockUpgradeGrazingRange",
    "deploy:testnet:s020": "hardhat --network testnet deploy --no-compile --reset --tags TimelockSetSharedStratsWhitelistedWorkers",
    "deploy:testnet:worker-config:upgrade:worker-config": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeWorkerConfig",
    "deploy:testnet:worker-config:upgrade:single-asset-worker-config": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeSingleAssetWorkerConfig",
    "deploy:testnet:vault-config:upgrade:vault-config": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeVaultConfig",
    "deploy:testnet:s023": "hardhat --network testnet deploy --no-compile --reset --tags SetMaxKillBps",
    "deploy:testnet:oracles:config:add-price-source-chainlink": "hardhat --network testnet deploy --no-compile --reset --tags AddSourceChainLinkPriceOracle",
    "deploy:testnet:oracles:config:add-primary-source-oracle-medianizer": "hardhat --network testnet deploy --no-compile --reset --tags AddSourceOracleMedianizer",
    "deploy:testnet:oracles:deploy:oracle-medianizer": "hardhat --network testnet deploy --no-compile --reset --tags OracleMedianizer",
    "deploy:testnet:workers:upgrade:workers02": "hardhat --network testnet deploy --no-compile --reset --tags UpgradeWorkers02",
    "deploy:testnet:workers:config:set-treasury-config": "hardhat --network testnet deploy --no-compile --reset --tags TimelockAddTreasuryFieldsWorkers02",
    "deploy:testnet:workers:config:set-beneficial-vault-config": "hardhat --network testnet deploy --no-compile --reset --tags TimelockAddBeneficialBuybackFieldsWorkers02",
    "deploy:testnet:workers:config:set-reinvest-config": "hardhat --network testnet deploy --no-compile --reset --tags TimelockSetReinvestConfigWorkers02",
    "deploy:testnet:fairlaunch:config:add-pool": "hardhat --network testnet deploy --no-compile --reset --tags TimelockAddPool",
    "deploy:testnet:fairlaunch:config:set-pool": "hardhat --network testnet deploy --no-compile --reset --tags TimelockSetPool",
    "deploy:testnet:mdex:deploy:mdex": "hardhat --network testnet deploy --no-compile --reset --tags TestnetMdex",
    "deploy:testnet:strategies:deploy:mdex:share-strategies": "hardhat --network testnet deploy --no-compile --reset --tags MdexShareRestrictedStrategies",
    "deploy:testnet:strategies:deploy:mdex:vault-strategies": "hardhat --network testnet deploy --no-compile --reset --tags MdexVaultRestrictedStrategies",
    "deploy:testnet:proxy-token:deploy:proxy-token": "hardhat --network testnet deploy --no-compile --reset --tags ProxyToken",
    "deploy:testnet:emission-forwarder:deploy:emission-forwarder": "hardhat --network testnet deploy --no-compile --reset --tags EmissionForwarder",
    "deploy:kovan:timelock:deploy:timelock": "hardhat --network kovan deploy --no-compile --reset --tags Timelock",
    "deploy:kovan:debt-token:deploy:debt-token": "hardhat --network kovan deploy --no-compile --reset --tags DebtTokenV2",
    "deploy:ethereum:timelock:deploy:timelock": "hardhat --network ethereum deploy --no-compile --reset --tags Timelock",
    "deploy:ethereum:debt-token:deploy:debt-token": "hardhat --network ethereum deploy --no-compile --reset --tags DebtTokenV2",
    "deploy:testnet:delta-neutral-oracle:deploy:delta-neutral-oracle": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralOracle",
    "deploy:testnet:delta-neutral-vault-config:deploy:delta-neutral-vault-config": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralVaultConfig",
    "deploy:testnet:delta-neutral-vault:deploy:delta-neutral-vault": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralVault",
    "deploy:testnet:delta-neutral-vault:config:init-positions": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralVaultInitPositions",
    "deploy:testnet:delta-neutral-worker:deploy:delta-neutral-pcs-worker": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralPCSWorker02",
    "deploy:testnet:delta-neutral-worker:deploy:delta-neutral-mdex-worker": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralMdexWorker02",
    "deploy:testnet:delta-neutral-worker:config:set-whitelist-callers": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralWorkerSetWhitelistCallers",
    "deploy:testnet:delta-neutral-vault-gateway:deploy:delta-neutral-vault-gateway": "hardhat --network testnet deploy --no-compile --reset --tags DeltaNeutralVaultGateway",
    "deploy:mainnetfork:delta-neutral:deploy:oracle": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags DeltaNeutralOracle",
    "deploy:mainnetfork:delta-neutral:deploy:vault:config": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags DeltaNeutralVaultConfig",
    "deploy:mainnetfork:delta-neutral:deploy:vault": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags DeltaNeutralVault",
    "deploy:mainnetfork:delta-neutral:configs:vault:init-positions": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags DeltaNeutralVaultInitPositions",
    "deploy:mainnetfork:delta-neutral:deploy:pcs:workers": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags DeltaNeutralPCSWorker02",
    "deploy:mainnetfork:delta-neutral:deploy:mdex:workers": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags DeltaNeutralMdexWorker02",
    "deploy:mainnetfork:delta-neutral:configs:worker:set-whitelist-caller": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags DeltaNeutralWorkerSetWhitelistCallers",
    "deploy:mainnetfork:vault-config:config:set-whitelisted-callers": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags SetWhitelistedCallers",
    "deploy:mainnetfork:timelock:execute": "hardhat --network mainnetfork deploy --config hardhat.config.8.10.forking.ts --no-compile --reset --tags TimeLockExecution",
    "deploy:fantom_testnet:wftm:deploy:wftm": "hardhat --network fantom_testnet deploy --no-compile --reset --tags WFTM",
    "deploy:fantom_testnet:spooky:deploy:spookyswap": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SpookySwap",
    "deploy:fantom_testnet:tomb:deploy:tshare-reward-pool": "hardhat --network fantom_testnet deploy --no-compile --reset --tags TShareRewardPool",
    "deploy:fantom_testnet:dex:deploy:token-liq-pool": "hardhat --network fantom_testnet deploy --no-compile --reset --tags TestnetDeployTokens",
    "deploy:fantom_testnet:oracles:deploy:simple-price-oracle": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SimpleOracle",
    "deploy:fantom_testnet:oracles:deploy:chainlink-oracle": "hardhat --network fantom_testnet deploy --no-compile --reset --tags ChainLinkPriceOracle",
    "deploy:fantom_testnet:oracles:deploy:oracle-medianizer": "hardhat --network fantom_testnet deploy --no-compile --reset --tags OracleMedianizer",
    "deploy:fantom_testnet:worker-config:deploy:worker-config": "hardhat --network fantom_testnet deploy --no-compile --reset --tags WorkerConfig",
    "deploy:fantom_testnet:wnative-relayer:deploy:wnative-relayer": "hardhat --network fantom_testnet deploy --no-compile --reset --tags WNativeRelayer",
    "deploy:fantom_testnet:triple-slope-model:deploy:triple-slope-model": "hardhat --network fantom_testnet deploy --no-compile --reset --tags TripleSlopeModel",
    "deploy:fantom_testnet:vault-config:deploy:vault-config": "hardhat --network fantom_testnet deploy --no-compile --reset --tags ConfigurableInterestVaultConfig",
    "deploy:fantom_testnet:vault:deploy:vault2": "hardhat --network fantom_testnet deploy --no-compile --reset --tags Vault2",
    "deploy:fantom_testnet:strategies:deploy:spookyswap:share-strategies": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SpookySwapShareRestrictedStrategies",
    "deploy:fantom_testnet:strategies:deploy:spookyswap:vault-strategies": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SpookySwapRestrictedVaultStrategies",
    "deploy:fantom_testnet:workers:deploy:tomb-workers03": "hardhat --network fantom_testnet deploy --no-compile --reset --tags TombWorkers03",
    "deploy:fantom_testnet:workers:deploy:spookyswap-workers03": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SpookyWorkers03",
    "deploy:fantom_testnet:timelock:deploy:timelock": "hardhat --network fantom_testnet deploy --no-compile --reset --tags Timelock",
    "deploy:fantom_testnet:minifl:deploy:minifl": "hardhat --network fantom_testnet deploy --no-compile --reset --tags MiniFL",
    "deploy:fantom_testnet:rewarder1:deploy:rewarder1": "hardhat --network fantom_testnet deploy --no-compile --reset --tags Rewarder1",
    "deploy:fantom_testnet:vault:deploy:minifl-vault": "hardhat --network fantom_testnet deploy --no-compile --reset --tags MiniFL_Vault",
    "deploy:fantom_testnet:two-slope-model:deploy:two-slope-model": "hardhat --network fantom_testnet deploy --no-compile --reset --tags TwoSlopeModel",
    "deploy:fantom_testnet:minifl:config:add-pool": "hardhat --network fantom_testnet deploy --no-compile --reset --tags MiniFLAddPool",
    "deploy:fantom_testnet:minifl:config:set-pool-no-timelock": "hardhat --network fantom_testnet deploy --no-compile --reset --tags MiniFLSetPool",
    "deploy:fantom_testnet:workers:config:set-max-reinvest-bouty-bps-workers03": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SetMaxReinvestBountyBpsWorkers03",
    "deploy:fantom_testnet:workers:config:set-beneficial-vault-config-workers03": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SetBeneficialBuybackFieldsWorkers03",
    "deploy:fantom_testnet:workers:config:set-reinvest-config-workers03": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SetReinvestConfigWorkers03",
    "deploy:fantom_testnet:workers:config:set-treasury-config-workers03": "hardhat --network fantom_testnet deploy --no-compile --reset --tags SetTreasuryFieldsWorkers03",
    "deploy:fantom_mainnet:wftm:deploy:wftm": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags WFTM",
    "deploy:fantom_mainnet:spooky:deploy:spookyswap": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SpookySwap",
    "deploy:fantom_mainnet:dex:deploy:token-liq-pool": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags TestnetDeployTokens",
    "deploy:fantom_mainnet:oracles:deploy:simple-price-oracle": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SimpleOracle",
    "deploy:fantom_mainnet:oracles:deploy:chainlink-oracle": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags ChainLinkPriceOracle",
    "deploy:fantom_mainnet:oracles:deploy:oracle-medianizer": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags OracleMedianizer",
    "deploy:fantom_mainnet:worker-config:deploy:worker-config": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags WorkerConfig",
    "deploy:fantom_mainnet:wnative-relayer:deploy:wnative-relayer": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags WNativeRelayer",
    "deploy:fantom_mainnet:triple-slope-model:deploy:triple-slope-model": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags TripleSlopeModel",
    "deploy:fantom_mainnet:vault-config:deploy:vault-config": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags ConfigurableInterestVaultConfig",
    "deploy:fantom_mainnet:vault:deploy:vault2": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags Vault2",
    "deploy:fantom_mainnet:strategies:deploy:spookyswap:share-strategies": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SpookySwapShareRestrictedStrategies",
    "deploy:fantom_mainnet:strategies:deploy:spookyswap:vault-strategies": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SpookySwapRestrictedVaultStrategies",
    "deploy:fantom_mainnet:workers:deploy:spookyswap-workers03": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SpookyWorkers03",
    "deploy:fantom_mainnet:workers:deploy:tomb-workers03": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags TombWorkers03",
    "deploy:fantom_mainnet:timelock:deploy:timelock": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags Timelock",
    "deploy:fantom_mainnet:minifl:deploy:minifl": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags MiniFL",
    "deploy:fantom_mainnet:rewarder1:deploy:rewarder1": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags Rewarder1",
    "deploy:fantom_mainnet:vault:deploy:minifl-vault": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags MiniFL_Vault",
    "deploy:fantom_mainnet:oracles:deploy:chainlink-oracle2": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags ChainlinkPriceOracle2",
    "deploy:fantom_mainnet:oracles:config:add-price-source-chainlink": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags AddSourceChainLinkPriceOracle",
    "deploy:fantom_mainnet:oracles:config:add-primary-source-oracle-medianizer": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags AddSourceOracleMedianizer",
    "deploy:fantom_mainnet:two-slope-model:deploy:two-slope-model": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags TwoSlopeModel",
    "deploy:fantom_mainnet:minifl:config:add-pool": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags MiniFLAddPool",
    "deploy:fantom_mainnet:minifl:config:set-pool-no-timelock": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags MiniFLSetPool",
    "deploy:fantom_mainnet:workers:config:set-max-reinvest-bouty-bps-workers03": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SetMaxReinvestBountyBpsWorkers03",
    "deploy:fantom_mainnet:workers:config:set-beneficial-vault-config-workers03": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SetBeneficialBuybackFieldsWorkers03",
    "deploy:fantom_mainnet:workers:config:set-reinvest-config-workers03": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SetReinvestConfigWorkers03",
    "deploy:fantom_mainnet:workers:config:set-treasury-config-workers03": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SetTreasuryFieldsWorkers03",
    "deploy:fantom_mainnetfork:minifl:config:add-pool-no-timelock": "hardhat --network fantom_mainnetfork deploy --no-compile --reset --tags MiniFLAddPool",
    "deploy:fantom_mainnetfork:minifl:config:set-pool-no-timelock": "hardhat --network fantom_mainnetfork deploy --no-compile --reset --tags MiniFLSetPool",
    "deploy:fantom_mainnetfork:workers:config:set-max-reinvest-bouty-bps-workers03": "hardhat --network fantom_mainnetfork deploy --no-compile --reset --tags SetMaxReinvestBountyBpsWorkers03",
    "deploy:fantom_mainnetfork:workers:config:set-beneficial-vault-config-workers03": "hardhat --network fantom_mainnetfork deploy --no-compile --reset --tags SetBeneficialBuybackFieldsWorkers03",
    "deploy:fantom_mainnetfork:workers:config:set-reinvest-config-workers03": "hardhat --network fantom_mainnetfork deploy --no-compile --reset --tags SetReinvestConfigWorkers03",
    "deploy:fantom_mainnetfork:workers:config:set-treasury-config-workers03": "hardhat --network fantom_mainnetfork deploy --no-compile --reset --tags SetTreasuryFieldsWorkers03",

    "deploy:fantom_mainnet:oracles:config:add-price-source-chainlink2": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags AddSourceChainlinkPriceOracle2",
    "deploy:fantom_mainnet:delta-neutral-oracle:deploy:delta-neutral-oracle": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags DeltaNeutralOracle",
    "deploy:fantom_mainnet:delta-neutral-vault-config:deploy:delta-neutral-vault-config": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags DeltaNeutralVaultConfig",
    "deploy:fantom_mainnet:delta-neutral-worker:deploy:delta-neutral-spooky-worker": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags DeltaNeutralSpookyWorker03",
    "deploy:fantom_mainnet:delta-neutral-vault:deploy:delta-neutral-vault": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags DeltaNeutralVault",
    "deploy:fantom_mainnet:delta-neutral-vault-gateway:deploy:delta-neutral-vault-gateway": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags DeltaNeutralVaultGateway",
    "deploy:fantom_mainnet:delta-neutral-worker:config:set-whitelist-callers": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags DeltaNeutralWorkerSetWhitelistCallers",
    "deploy:fantom_mainnet:vault-config:config:set-whitelisted-callers": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags SetWhitelistedCallers",
    "deploy:fantom_mainnet:delta-neutral-vault:config:init-positions": "hardhat --network fantom_mainnet deploy --no-compile --reset --tags DeltaNeutralVaultInitPositions",


    "fork":"hardhat console --no-compile --network fantom_mainnetfork",
    "mainnet": "hardhat console --no-compile --network mainnet",
    "ethereum": "hardhat console --no-compile --network ethereum",
    "test:case": "mocha --require hardhat/register --file test/integrations/protocol/delta-neutral/DeltaNeutralVault.test.ts --extension ts -g",
    "test:parallel": "mocha --require hardhat/register --recursive --parallel --extension ts --exit",
    "test:vaultconfig": "hardhat test --no-compile ./test/ConfigurableInterestVaultConfig.test.ts",
    "test:fairlaunch": "hardhat test --no-compile ./test/FairLaunch.test.ts",
    "test:fairlaunchv2": "hardhat test --no-compile ./test/FairLaunchV2.test.ts",
    "test:pancake": "hardhat test --no-compile ./test/Vault_Pancakeswap.test.ts",
    "test:pancakev2": "hardhat test --no-compile ./test/Vault_PancakeswapV2.test.ts",
    "test:pancakev202": "hardhat test --no-compile ./test/integrations/protocol/workers/pcs/Vault_PancakeswapV202.test.ts",
    "test:pancakemigrate": "hardhat test --no-compile ./test/Vault_Pancakeswap_Migrate.test.ts",
    "test:panadd": "hardhat test --no-compile ./test/Pancakeswap_StrategyAddBaseTokenOnly.test.ts",
    "test:panliquidate": "hardhat test --no-compile ./test/Pancakeswap_StrategyLiquidate.test.ts",
    "test:panminimize": "hardhat test --no-compile ./test/Pancakeswap_StrategyWithdrawMinimizeTrading.test.ts",
    "test:pantwoside": "hardhat test --no-compile ./test/Pancakeswap_StrategyAddTwoSidesOptimal.test.ts",
    "test:panpartialliquidate": "hardhat test --no-compile ./test/Pancakeswap_StrategyPartialCloseLiquidate.test.ts",
    "test:pan2add": "hardhat test --no-compile ./test/PancakeswapV2_StrategyAddBaseTokenOnly.test.ts",
    "test:pan2liquidate": "hardhat test --no-compile ./test/PancakeswapV2_StrategyLiquidate.test.ts",
    "test:pan2minimize": "hardhat test --no-compile ./test/PancakeswapV2_StrategyWithdrawMinimizeTrading.test.ts",
    "test:pan2twoside": "hardhat test --no-compile ./test/PancakeswapV2_StrategyAddTwoSidesOptimal.test.ts",
    "test:pan2partialliquidate": "hardhat test --no-compile ./test/PancakeswapV2_StrategyPartialCloseLiquidate.test.ts",
    "test:pan2restrictedadd": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_StrategyAddBaseTokenOnly.test.ts",
    "test:pan2restrictedtwoside": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_StrategyAddTwoSidesOptimal.test.ts",
    "test:pan2restrictedliquidate": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_StrategyLiquidate.test.ts",
    "test:pan2restrictedpartialcloseliquidate": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_StrategyPartialCloseLiquidate.test.ts",
    "test:pan2restrictedminimize": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_StrategyWithdrawMinimizeTrading.test.ts",
    "test:pan2restrictedpartialcloseminimize": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_StrategyPartialCloseMinimizeTrading.test.ts",
    "test:pan2singleassetadd": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_SingleAsset_StrategyAddBaseTokenOnly.test.ts",
    "test:pan2singleassetaddwithfarm": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_SingleAsset_StrategyAddBaseWithFarm.test.ts",
    "test:pan2singleassetliquidate": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_SingleAsset_StrategyLiquidate.test.ts",
    "test:pan2singleassetpartialcloseliquidate": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_SingleAsset_StrategyPartialCloseLiquidate.test.ts",
    "test:pan2singleassetminimize": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_SingleAsset_StrategyWithdrawMinimizeTrading.test.ts",
    "test:pan2singleassetpartialcloseminimize": "hardhat test --no-compile ./test/PancakeswapV2_Restricted_SingleAsset_StrategyPartialCloseWithdrawMinimizeTrading.test.ts",
    "test:workerconf": "hardhat test --no-compile ./test/integrations/protocol/workers/WorkerConfig.test.ts",
    "test:cakemaxiworker": "hardhat test --no-compile ./test/CakeMaxiWorker.test.ts",
    "test:cakemaxiworker02": "hardhat test --no-compile ./test/CakeMaxiWorker02.test.ts",
    "test:singleassetworkerconf": "hardhat test --no-compile ./test/SingleAssetWorkerConfig.test.ts",
    "test:waultrestrictedadd": "hardhat test --no-compile ./test/WaultSwap_Restricted_StrategyAddBaseTokenOnly.test.ts",
    "test:waultrestrictedtwoside": "hardhat test --no-compile ./test/WaultSwap_Restricted_StrategyAddTwoSidesOptimal.test.ts",
    "test:waultrestrictedliquidate": "hardhat test --no-compile ./test/WaultSwap_Restricted_StrategyLiquidate.test.ts",
    "test:waultrestrictedminimize": "hardhat test --no-compile ./test/WaultSwap_Restricted_StrategyWithdrawMinimizeTrading.test.ts",
    "test:waultrestrictedpartialcloseliquidate": "hardhat test --no-compile ./test/WaultSwap_Restricted_StrategyPartialCloseLiquidate.test.ts",
    "test:waultrestrictedpartialcloseminimize": "hardhat test --no-compile ./test/WaultSwap_Restricted_StrategyPartialCloseMinimizeTrading.test.ts",
    "test:vaultwaultswap": "hardhat test --no-compile ./test/Vault_WaultSwap.test.ts",
    "test:vaultwaultswap02": "hardhat test --no-compile ./test/Vault_WaultSwap02.test.ts",
    "test:mdexrestrictedadd": "hardhat test --no-compile ./test/Mdex_Restricted_StrategyAddBaseTokenOnly.test.ts",
    "test:mdexrestrictedLiquidate": "hardhat test --no-compile ./test/Mdex_Restricted_StrategyLiquidate.test.ts",
    "test:mdexrestrictedminimize": "hardhat test --no-compile ./test/integrations/protocol/strategies/mdex/Mdex_Restricted_StrategyWithdrawMinimizeTrading.test.ts",
    "test:mdexrestrictedtwoside": "hardhat test --no-compile ./test/Mdex_Restricted_StrategyAddTwoSidesOptimal.test.ts",
    "test:mdexrestrictedpartialcloseliquidate": "hardhat test --no-compile ./test/Mdex_Restricted_StrategyPartialCloseLiquidate.test.ts",
    "test:mdexrestrictedpartialcloseminimize": "hardhat test --no-compile ./test/Mdex_Restricted_StrategyPartialCloseMinimizeTrading.test.ts",
    "test:mdex02": "hardhat test --no-compile ./test/Vault_MdexWorker02.test.ts",
    "test:spookyadd": "hardhat test --no-compile ./test/integrations/protocol/strategies/spookyswap/Spookyswap_AddBaseTokenOnly.test.ts",
    "test:spookytwosides": "hardhat test --no-compile ./test/integrations/protocol/strategies/spookyswap/Spookyswap_AddTwoSidesOptimal.test.ts",
    "test:spookyliquidate": "hardhat test --no-compile ./test/integrations/protocol/strategies/spookyswap/Spookyswap_Liquidate.test.ts",
    "test:spookyminimize": "hardhat test --no-compile ./test/integrations/protocol/strategies/spookyswap/Spookyswap_Minimize.test.ts",
    "test:spookypartialliquidate": "hardhat test --no-compile ./test/integrations/protocol/strategies/spookyswap/Spookyswap_PartialCloseLiquidate.test.ts",
    "test:spookypartialminimize": "hardhat test --no-compile ./test/integrations/protocol/strategies/spookyswap/Spookyswap_PartialCloseMinimize.test.ts",
    "test:vault2_spooky03": "hardhat test --no-compile ./test/integrations/protocol/workers/spookyswap/Vault2_SpookyWorker03.test.ts",
    "test:vault_spooky03": "hardhat test --no-compile ./test/integrations/protocol/workers/spookyswap/Vault_SpookyWorker03.test.ts",
    "test:vault_tomb03": "hardhat test --no-compile ./test/integrations/protocol/workers/tomb/Vault_TombWorker03.test.ts",
    "test:router": "hardhat test --no-compile ./test/IbTokenRouter.test.ts",
    "test:timelock": "hardhat test --no-compile ./test/integrations/Timelock.test.ts",
    "test:tripleslope": "hardhat test --no-compile ./test/integrations/protocol/TripleSlopeModel.test.ts",
    "test:twoslope": "hardhat test --no-compile ./test/integrations/protocol/TwoSlopeModel.test.ts",
    "test:shield": "hardhat test --no-compile ./test/integrations/token/Shield.test.ts",
    "test:stronkalpaca": "hardhat test --no-compile ./test/StronkAlpaca.test.ts",
    "test:grazingRange": "hardhat test --no-compile ./test/GrazingRange.test.ts",
    "test:merkle": "hardhat test --no-compile ./test/integrations/token/MerkleDistributor.test.ts",
    "test:oracleMedianizer": "hardhat test --no-compile ./test/OracleMedianizer.test.ts",
    "test:chainLinkPriceOracle": "hardhat test --no-compile ./test/ChainLinkPriceOracle.test.ts",
    "test:deltaneutral": "hardhat test --no-compile ./test/integrations/protocol/delta-neutral/DeltaNeutralVault.test.ts",
    "test:deltaneutralMiniFL": "hardhat test --no-compile ./test/integrations/protocol/delta-neutral/DeltaNeutralVault-MiniFL.test.ts",
    "test:deltaneutralNon18Decimals": "hardhat test --no-compile ./test/integrations/protocol/delta-neutral/DeltaNeutralVaultNon18Decimals.test.ts",
    "test:deltaneutralGateway": "hardhat test --no-compile ./test/integrations/protocol/delta-neutral/DeltaNeutralVaultGateway.test.ts",
    "test:deltaneutralGateway:spooky": "hardhat test --no-compile ./test/integrations/protocol/delta-neutral/DeltaNeutralVaultGatewayWithSpookySwap.test.ts",
    "test:deltaneutralConfig": "hardhat test --no-compile ./test/integrations/protocol/delta-neutral/DeltaNeutralVaultConfig.test.ts",
    "test:deltaneutral:pancakeworker": "hardhat test --no-compile ./test/integrations/protocol/workers/delta-neutral/Vault_DeltaNeutralPancakeWorker02.test.ts",
    "test:deltaneutral:mdexworker": "hardhat test --no-compile ./test/integrations/protocol/workers/delta-neutral/Vault_DeltaNeutralMdexWorker02.test.ts",
    "test:deltaneutral:spookyworker": "hardhat test --no-compile ./test/integrations/protocol/workers/delta-neutral/Vault_DeltaNeutralSpookyWorker03.test.ts",
    "test:deltaneutraloracle": "hardhat test --no-compile ./test/integrations/protocol/DeltaNeutralOracle.test.ts",
    "test:chainlinkPriceOracle2": "hardhat test --no-compile ./test/integrations/protocol/price-oracle/ChainlinkPriceOracle2.test.ts",
    "test:mainnetfork:grazingRangeV2": "hardhat --network mainnetfork run --no-compile ./test/fork/GrazingRangeUpgrade.test.ts",
    "test:mainnet-fork:deltaneutraloracle": "hardhat --network mainnetfork run --no-compile ./scripts/fork/DeltaNeutralOracle.test.ts",
    "test:miniFL": "hardhat test --no-compile ./test/integrations/token/MiniFL.test.ts",
    "test:emissionForwarder": "hardhat test --no-compile ./test/integrations/token/EmissionForwarder.test.ts",
    "test:strategyOracleMinimize": "hardhat test --no-compile ./test/integrations/protocol/strategies/waultswap/StrategyOracleMinimize.test.ts",
    "test:strategyOracleLiquidate": "hardhat test --no-compile ./test/integrations/protocol/strategies/waultswap/StrategyOracleLiquidate.test.ts",
    "test:revenue-treasury": "hardhat test --no-compile ./test/integrations/protocol/RevenueTreasury.test.ts",
    "test": "hardhat test --no-compile",
    "testnet": "hardhat console --no-compile --network testnet",
    "fantom_testnet": "hardhat console --no-compile --network fantom_testnet",
    "fantom_mainnet": "hardhat console --no-compile --network fantom_mainnet",
    "scripts:mainnet:validate-config": "hardhat --network mainnet run --no-compile ./scripts/validate-config.ts",
    "scripts:mainnet:withdraw-reserve": "hardhat --network mainnet run --no-compile ./scripts/withdraw-reserve.ts",
    "scripts:testnet:validate-config": "hardhat --network testnet run --no-compile ./scripts/validate-config.ts",
    "scripts:testnet:withdraw-reserve": "hardhat --network testnet run --no-compile ./scripts/withdraw-reserve.ts",
    "scripts:fantom_testnet:validate-config": "hardhat --network fantom_testnet run --no-compile ./scripts/validate-config.ts",
    "scripts:fantom_testnet:withdraw-reserve": "hardhat --network fantom_testnet run --no-compile ./scripts/withdraw-reserve.ts",
    "scripts:fantom_mainnet:validate-config": "hardhat --network fantom_mainnet run --no-compile ./scripts/validate-config.ts",
    "scripts:fantom_mainnet:withdraw-reserve": "hardhat --network fantom_mainnet run --no-compile ./scripts/withdraw-reserve.ts",
    "coverage": "hardhat coverage",
    "solhint": "./node_modules/.bin/solhint -f table contracts/**/*.sol",
    "prettier:solidity": "./node_modules/.bin/prettier --write contracts/**/*.sol",
    "mainnet-fork": "hardhat node --show-stack-traces --config hardhat.config.8.10.forking.ts"
    
  },
  "devDependencies": {
    "@chainlink/contracts": "^0.1.7",
    "@defi-wonderland/smock": "^2.0.7",
    "@ethersproject/bignumber": "^5.0.14",
    "@nomiclabs/ethereumjs-vm": "^4",
    "@nomiclabs/hardhat-ethers": "^2.0.1",
    "@nomiclabs/hardhat-etherscan": "^2.1.1",
    "@nomiclabs/hardhat-waffle": "^2.0.1",
    "@openzeppelin/contracts": "3.4.2",
    "@openzeppelin/contracts-ethereum-package": "^3.0.0",
    "@openzeppelin/contracts-upgradeable": "^4.5.1",
    "@openzeppelin/hardhat-upgrades": "^1.9.0",
    "@openzeppelin/test-helpers": "^0.5.10",
    "@scientix-finance/scientix-contract": "git+https://github.com/alpaca-finance/scientix-contract.git#278e8d2444d6bc751c6e25f2a2e7d1da4e7aec04",
    "@typechain/ethers-v5": "^8.0.2",
    "@typechain/hardhat": "^3.0.0",
    "@types/chai": "^4.2.15",
    "@types/mocha": "^8.2.0",
    "@types/node": "^14.14.28",
    "@uniswap/v2-core": "^1.0.1",
    "chai": "^4.3.0",
    "chai-bn": "^0.2.1",
    "dotenv": "^8.2.0",
    "ethereum-waffle": "^3.4.0",
    "ethereumjs-util": "^7.0.10",
    "ethers": "^5.5.1",
    "hardhat": "^2.8.0",
    "hardhat-deploy": "^0.9.24",
    "prettier": "^2.3.0",
    "prettier-plugin-solidity": "^1.0.0-beta.10",
    "solhint": "^3.3.4",
    "solhint-plugin-prettier": "^0.0.5",
    "solidity-coverage": "^0.7.15",
    "ts-generator": "^0.1.1",
    "ts-node": "^9.1.1",
    "typechain": "^6.0.2",
    "typescript": "^4.1.5"
  },
  "files": [
    "typechain",
    "artifacts",
    "contracts",
    "merkle-distribution-info",
    ".testnet.json",
    ".staging.json",
    ".mainnet.json"
  ],
  "resolutions": {
    "lodash": "^4.17.21",
    "node-fetch": "^2.6.7",
    "nanoid": "^3.1.31",
    "node-forge": "^1.0.0",
    "shelljs": "^0.8.5",
    "follow-redirects": "^1.14.7",
    "marked": "^4.0.10",
    "braces": "^2.3.1",
    "axios": "^0.21.2",
    "ws": "^7.4.6",
    "ansi-regex": "^5.0.1",
    "nth-check": "^2.0.1",
    "web3": "^1.7.0",
    "glob-parent": "^5.1.2",
    "underscore": "^1.12.1",
    "elliptic": "^6.5.4",
    "yargs-parser": "^13.1.2",
    "minimist": "^1.2.3",
    "lodash.template": "^4.5.0",
    "mem": "^4.0.0",
    "concat-stream": "^1.5.2",
    "simple-get": "^2.8.2"
  },
  "engines": {
    "node": ">=14"
  },
  "dependencies": {
    "@nomiclabs/hardhat-vyper": "^2.0.1",
    "@openzeppelin/contracts-upgradeable": "^4.5.1",
    "@rari-capital/solmate": "^6.2.0"
  }
}
