quoteLiquidity
amountB = (amountA * reserveB) / reserveA;

SolidlyStrategyAddBaseTokenOnly
_addLiquidity amountADesired 1000000000000000000
_addLiquidity amountBDesired 100000000000000000
swapAmt 414240340723633272
reserve0 before 1000000000000000000
reserve0 before 100000000000000000
reserve0 after 1414198916689560909
reserve0 after 70711410410415119
_addLiquidity amountADesired 585759659276366728
_addLiquidity amountBDesired 29288589589584881
quoteLiquidity amountA 585759659276366728
quoteLiquidity reserveA 1414198916689560909
quoteLiquidity reserveB 70711410410415119
_addLiquidity amountBOptimal 29288589589584881
debrisFarm 0
debrisBase 0

SpookyswapStrategyAddTwoSideOptimal
    full flow test
actualAmtA 1000000000000000000
swapAmtFullEquation 414234274238472568
swapAmt 414234274238472568
isReversed false
getAmountsOut: 29288286288076371
amount0Out 0
amount1Out 29288286288076371
_balance0 1414234274238472568
_balance1 70711713711923629
_reserve0 1000000000000000000
_reserve1 100000000000000000
amount0In 414234274238472568
amount1In 0
after update
reserve0 1414234274238472568
reserve1 70711713711923629
baseToken.myBalance() 1585765725761527432
farmingToken.myBalance() 79288286288076371
quoteLiquidity amountA 1585765725761527432
quoteLiquidity reserveA 1414234274238472568
quoteLiquidity reserveB 70711713711923629
quoteLiquidity amountB 79288286288076372
amountBOptimal 79288286288076372
quoteLiquidity amountA 79288286288076371
quoteLiquidity reserveA 70711713711923629
quoteLiquidity reserveB 1414234274238472568
quoteLiquidity amountB 1585765725761527406
amountAOptimal 1585765725761527406
baseToken.myBalance() 26
farmingToken.myBalance() 0

1414234274238472568-1414198916689560909

35357548911616
41425284238730

SolidlyStrategyAddTwoSideOptimal
    full flow test
_addLiquidity amountADesired 1000000000000000000
_addLiquidity amountBDesired 100000000000000000
_addLiquidity amountADesired 1000000000000000000
_addLiquidity amountBDesired 1000000000000000000
reserve0 before 1000000000000000000
reserve0 before 100000000000000000
reserve0 after 1414198916689560909
reserve0 after 70711410410415119
_addLiquidity amountADesired 1585759659276366728
_addLiquidity amountBDesired 79288589589584881
quoteLiquidity amountA 1585759659276366728
quoteLiquidity reserveA 1414198916689560909
quoteLiquidity reserveB 70711410410415119
_addLiquidity amountBOptimal 79289625211886518
quoteLiquidity amountA 79288589589584881
quoteLiquidity reserveA 70711410410415119
quoteLiquidity reserveB 1414198916689560909
_addLiquidity amountAOptimal 1585738947259330520
debrisFarm 0
debrisBase 20712017036208


1.99995858e19
79288589589584881*1.99995858e19/1e18 = 1.58573895e18
1585759659276366728*1e18/


585759659276366728*2 / 1414198916689560909 = 29288589589584881 * 1e18 / 70711410410415119

29288589589584881/585759659276366728 = 0.05000104
29288589589584881 = 0.05000104 * 585759659276366728
1.58573881e18 =  79288589589584881/0.05000104

585759659276366728/29288589589584881 = 19.99958576

4.14198917e17 = 4.14198917e17
1585759659276366728 + -0.00002071 * 1e18 / 1414198916689560909 = 79288589589584881 * 1e18 / 70711410410415119
1.12131302e18 = 1.12129838e18


585759659276366728 * 70711410410415119 / 1414198916689560909
1585759659276366728 * 70711410410415119 / 1414198916689560909

1585759659276366728-585759659276366728 = 1e18
79288589589584881 - 29288589589584881 = 5e16

79289625211886518-29288589589584881 = 0.05000104

79289625211886518-79288589589584881 = 1035622301632

79289625211886518/29288589589584881 = 2.70718482
79288589589584881/29288589589584881 = 2.70714946

414198916689560909
414066792276999508 after fee
414108203097309238 before fee

414066792276999508 * 10000/9999 = 

function compute(amtA, amtB, resA, resB) {
	let fee = amtA / 10000
	let _c = ((amtA+fee) * resB) - (amtB * resA);
	let c = _c / (amtB + resB);
	let swapAmt = (5000 * (Math.sqrt(399960001 * resA**2 + 399920004 * resA * c) - (19999 * resA))) /
	  99980001;
	// swapAmt = 414198916689560909;
	let [amtBOut, newResA, newResB] = swap(swapAmt, resA, resB);
	let amountBOptimal = quoteLiquidity(amtA-swapAmt,newResA,newResB)
	console.log("c", c)
	console.log("swapAmt", swapAmt)
	console.log("have amtB", amtBOut + amtB);
	console.log("want amtB",amountBOptimal);
	console.log("debris", (amtBOut + amtB) - amountBOptimal)
  }

(1e18 * 29281982614855760) / ((0.1*1e18) - 29281982614855760)